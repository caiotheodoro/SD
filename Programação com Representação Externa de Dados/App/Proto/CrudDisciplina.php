<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: disciplinas.proto

namespace App\Proto;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>CrudDisciplina</code>
 */
class CrudDisciplina extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>int32 type = 1;</code>
     */
    protected $type = 0;
    /**
     * Generated from protobuf field <code>.Disciplina disciplina = 2;</code>
     */
    protected $disciplina = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $type
     *     @type \App\Proto\Disciplina $disciplina
     * }
     */
    public function __construct($data = NULL) {
        \App\Proto\GPBMetadata\Disciplinas::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>int32 type = 1;</code>
     * @return int
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * Generated from protobuf field <code>int32 type = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkInt32($var);
        $this->type = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.Disciplina disciplina = 2;</code>
     * @return \App\Proto\Disciplina|null
     */
    public function getDisciplina()
    {
        return $this->disciplina;
    }

    public function hasDisciplina()
    {
        return isset($this->disciplina);
    }

    public function clearDisciplina()
    {
        unset($this->disciplina);
    }

    /**
     * Generated from protobuf field <code>.Disciplina disciplina = 2;</code>
     * @param \App\Proto\Disciplina $var
     * @return $this
     */
    public function setDisciplina($var)
    {
        GPBUtil::checkMessage($var, \App\Proto\Disciplina::class);
        $this->disciplina = $var;

        return $this;
    }

}

